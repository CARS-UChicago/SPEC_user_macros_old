# AlphaScan - Scans incident angle.
def AlphaScan '
	if ($# != 4 ) {
	 eprint "Usage: AlphaScan start finish intervals time \n "
       exit
	} 

	 _s1 = $1 ;
       _f1 = $2 ;
       _n1 = int($3) ; 
       _ctime = $4  ;

	if (_n1 <= 0) {
		eprint "Number of Intervals <= 0"
		exit
	} 
	

	HEADING = sprintf("AlphaScan %g %g %g %g",$1, $2, $3, $4)
	_d1 = (_f1 - _s1) / _n1++
	X_L = "Energy (keV)"
	Y_L = cnt_name(DET)
	_sx = _s1; _fx = _f1

	FPRNT=sprintf("Energy  %s  ",motor_name(Mono))
	PPRNT=sprintf("%9.9s %9.9s ", "Energy",motor_name(Mono))
	_stype = 1
	_cols=1
	VPRNT=PPRNT
	scan_head

     # redefine the _scan_on macro
     def _scan_on \'
	 {
	 local h_ca k_ca l_ca
	 h_ca = H
	 k_ca = K
	 l_ca = L
	
       for (; NPTS < _n1; NPTS++) {
		local   alp
		get_angles
		alp = _s1 + NPTS * _d1
		F_ALPHA = alp
            H = h_ca
		K = k_ca
		L = l_ca
		calcA

		scan_move
		calcHKL
		FPRNT=sprintf("%g ",ALPHA)
		PPRNT=sprintf("%9.4f ",ALPHA)
		VPRNT=PPRNT
		scan_loop
		scan_data(NPTS, alp)
		scan_plot
	   }
	 }
	 scan_tail
	\'
	_scan_on
'
