# use this to play around with macros
#def test '{
#   local m[], n, str, j
#   str = " the number of words is "
#   n = split(str,m)
#   p str, n
#
#  for (j=0;j<n;j++) p m[j];
#
#}'

##########################################################################################
global FS_MOVE
       FS_MOVE = 0
global FS_CEN 
global FS_FWHM
global FS_AMP
global FS_X

def fake_dscan '{
      # This is declared in site_standard.mac since other 
      # macros there are checking it.... 
      IS_FAKE_SCAN = 1;

	if ($# != 7) {
		eprint "Usage:  fake_dscan  motor start finish  intervals time peak_amp bgr"
		exit
	} 
	_check0 "$1"
      
      if (FS_MOVE == 1) {
         # if we are really moving the motors get the current positions 
         waitall
         get_angles
      } else {
         # otherwise update the A array, ie assume that HKL have been set
         # and now get fake values for A array
        calcA
      }
      _c1 = A[$1]

	_m[0] = $1; 
      _s[0] = _c1 + $2; 
      _f[0] = _c1 + $3
	_n1 = int($4); 
      _ctime = $5
	_nm = 1

     # give vals for fake peak cen and fwhm
      FS_CEN = ( _s[0] + _f[0] ) / 2;
      FS_FWHM = ( _f[0] - _s[0] ) / 10;
      FS_AMP = $6;
      FS_BGR = $7;
     
      _fake_ascan

}'

#########################################################################
# "count" is called by the scans to count monitor or time.
# It runs the clock and reads the scalers.
def fake_scan_count '{
        local j, arg, peak_amp, bgr
        # arg is either count time or number of monitor cnts
        arg = $1

        waitmove
        for (j=0; j< COUNTERS ; j++) {
            S[j] = 0;
        }


        # below is the "peak" function
         peak_amp = FS_AMP / ( FS_FWHM + square(FS_POS - FS_CEN) );

        # calc a background 
         bgr = FS_BGR + ( sqrt(peak_amp+FS_BGR) * ( 2* (0.5 - rand(100)/100 ) ) ) ;

        # below is the "total" function
        peak_amp = peak_amp + bgr;


        # lets assume io is 1e6 cps.
        # if MON = 1 using io as monitor
        if (MON == 1){
           S[sec] = arg/1e6;
           S[io] = arg;
           S[i1] = arg* ( peak_amp/(FS_AMP+FS_BGR) );
           S[DET] = peak_amp;
        } else { 
           S[sec]  = arg;
           S[io] = (arg * 1e6) ;
           S[i1] = (arg * 1e6)* ( peak_amp/(FS_AMP+FS_BGR) ) ;
           S[DET] = peak_amp;
        }

        if (S[sec] && MON >= 0)
                MON_RATE=S[MON]/S[sec]


}'

#########################################################################


