# do reflectivity rocking scans in vert scattering geom
# NOTE UNTESTED!!!!!
#
# inputs
# - start in eta units, end in eta units, spacing in eta units
# - width of rocking scan
#
REFL_SAT_FLAG = FALSE

def refl_scan_vert '{

    # check input
    if ($# != 6 ) {
      #                                  1       2        3         4    5      6
      msg_str = "Usage: refl_scan_horz  eta_st  eta_end  del_eta  sc_range npts cnt_time" 
      print msg_str
      exit
    } 

    local num_sc_pts
    # calc num points
    if ($2 < $1) {
         print "end mu is less than start mu "
         exit
    }
         
    num_sc_pts = 1 + int( ($2 - $1)/$3 );
    if (num_sc_pts < 1) {
        print " Error: Num points < 1 "
        exit
    }
    d_eta = ($2 - $1)/(num_sc_pts-1)

    sc_range = $4
    num_rock_sc_pts = $5
    cnt_time = $6
    
    eta_start = $1      ;   mv eta eta_start
    del_start = 2*($1)  ;   mv del del_start

    j = 0;
    while(1){ 
        eta_val = (eta_start + j*d_eta)
        del_val = (del_start + 2*j*d_eta)
        p "Move eta to:" eta_val;  mv eta eta_val
        p "Move del to:" del_val;  mv del del_val
    
        #dscan  eta -0.1 0.1 40 cnt_time
        dscan  eta -sc_range/2 sc_range/2 num_rock_sc_pts cnt_time
        if (REFL_SAT_FLAG == TRUE){
           test_sat = CHECK_SAT(1)
          
           if( test_sat == 0 ){
               j++;
           } else {
               j--;
               if (j<0) j=0;
           }
        } else {
           j++
        }
        if ( j > num_sc_pts) break;
    }

   
}'




# do reflectivity rocking scans in horz scattering geom
# NOTE UNTESTED!!!!!
#
# inputs
# - start in mu units, end in mu units, spacing in mu units
# - width of rocking scan

REFL_SAT_FLAG = FALSE

def refl_scan_horz '{

    # check input
    if ($# != 6 ) {
      #                                  1       2        3         4    5      6
      msg_str = "Usage: refl_scan_horz  mu_st  mu_end  del_mu  sc_range npts cnt_time" 
      print msg_str
      exit
    } 

    local num_sc_pts
    # calc num points
    if ($2 < $1) {
         print "end mu is less than start mu "
         exit
    }
         
    num_sc_pts = 1 + int( ($2 - $1)/$3 );
    if (num_sc_pts < 1) {
        print " Error: Num points < 1 "
        exit
    }
    d_mu = ($2 - $1)/(num_sc_pts-1)

    sc_range = $4
    num_rock_sc_pts = $5
    cnt_time = $6
    
    mu_start = $1      ;   mv mu mu_start
    nu_start = 2*($1)  ;   mv nu nu_start

    j = 0;
    while(1){ 
        mu_val = (mu_start + j*d_mu)
        nu_val = (nu_start + 2*j*d_mu)
        p "Move mu to:" mu_val;  mv mu mu_val
        p "Move nu to:" nu_val;  mv nu nu_val
    
        #dscan  mu -0.1 0.1 40 cnt_time
        dscan  mu -sc_range/2 sc_range/2 num_rock_sc_pts cnt_time
        if (REFL_SAT_FLAG == TRUE){
           test_sat = CHECK_SAT(1)
          
           if( test_sat == 0 ){
               j++;
           } else {
               j--;
               if (j<0) j=0;
           }
        } else {
           j++
        }
        if ( j > num_sc_pts) break;
    }

   
}'


